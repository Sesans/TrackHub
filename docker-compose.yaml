services: 
  api-gateway:
    build: 
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - rede2

  auth-service:
    build:
      context: ./API_userManagement
    container_name: auth-service
    ports:
     - "8081:8080"
    environment:
      DATABASE_URL: jdbc:postgresql://postgres_db2:5432/user_manager
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
     - postgres_db2
    networks:
     - rede2

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    environment:
      DATABASE_URL: jdbc:postgresql://postgres_db1:5432/email_manager
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_EMAIL: ${APP_EMAIL}
      APP_PASSWORD: ${APP_PASSWORD} 
      APP_URL: ${APP_URL}
    depends_on:
     - postgres_db1
    networks:
     - rede1

  music-service:
    build:
      context: ./music-service
    container_name: music-service
    ports:
     - "8082:8080"
    environment:
      DATABASE_URL: jdbc:postgresql://postgres_db3:5432/music_manager
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
     - postgres_db3
    networks:
     - rede3

  postgres_db1:
    image: postgres:14
    container_name: postgres_db1
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: email_manager
    volumes:
      - db-data1:/var/lib/postgresql/data
    networks:
     - rede1

  postgres_db2:
    image: postgres:14
    container_name: postgres_db2
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: user_manager
    volumes:
      - db-data2:/var/lib/postgresql/data
    networks:
     - rede2

  postgres_db3:
    image: postgres:14
    container_name: postgres_db3
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: music_manager
    volumes:
      - db-data3:/var/lib/postgresql/data
    networks:
     - rede3
  
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
     - "5500:80"
    depends_on:
     - auth-service
    networks:
     - rede2
    volumes:
     - ./frontend:/usr/share/nginx/html

volumes:
  db-data1:
  db-data2:
  db-data3:

networks:
  rede1:
  rede2:
  rede3: